name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch: # 允许手动触发

jobs:
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 部署到 Railway
      # - name: Deploy to Railway
      #   uses: railwayapp/railway-deploy@v1
      #   with:
      #     railway_token: ${{ secrets.RAILWAY_TOKEN }}
      #     service: backend

      # 部署到 Render
      # - name: Deploy to Render
      #   uses: johnbeynon/render-deploy-action@v0.0.8
      #   with:
      #     service-id: ${{ secrets.RENDER_SERVICE_ID }}
      #     api-key: ${{ secrets.RENDER_API_KEY }}

      - name: Deployment placeholder
        run: |
          echo "Backend deployment step"
          echo "Configure your deployment service (Railway, Render, AWS, etc.)"
          echo "Uncomment the appropriate deployment action above"

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [deploy-backend]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Vercel 部署 (推荐用于前端)
      # - name: Deploy to Vercel
      #   uses: amondnet/vercel-action@v25
      #   with:
      #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
      #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
      #     working-directory: ./frontend

      # Netlify 部署 (备选)
      # - name: Deploy to Netlify
      #   uses: nwtgck/actions-netlify@v2.0
      #   with:
      #     publish-dir: './frontend/dist'
      #     production-branch: main
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     deploy-message: "Deploy from GitHub Actions"
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Deployment placeholder
        run: |
          echo "Frontend deployment step"
          echo "Configure your deployment service (Vercel, Netlify, etc.)"
          echo "Uncomment the appropriate deployment action above"

  notify:
    name: Send Notifications
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: always()
    
    steps:
      - name: Notify deployment status
        run: |
          echo "Deployment completed!"
          echo "Add Slack, Discord, or email notifications here if needed"
      
      # Slack 通知示例
      # - name: Slack Notification
      #   uses: 8398a7/action-slack@v3
      #   with:
      #     status: ${{ job.status }}
      #     text: 'Deployment to production ${{ job.status }}'
      #     webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      #   if: always()

